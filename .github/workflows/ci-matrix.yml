name: CI Matrix

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-22.04]
        build_type: [Debug, Release]
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            cc: gcc
            cxx: g++
          - compiler: clang
            cc: clang
            cxx: clang++
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies (Ubuntu)
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential gcc g++ clang
        
    - name: Set up compiler
      run: |
        echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV
        
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_C_COMPILER=${{ matrix.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
        
    - name: Build project
      run: |
        cd build
        make -j$(nproc)
        
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --verbose
        
    - name: Run address sanitizer tests (Debug only)
      if: matrix.build_type == 'Debug'
      run: |
        cd build
        # Run tests with address sanitizer (already enabled in CMakeLists.txt)
        ./dns_tests || true  # Don't fail if tests don't exist yet
        
    - name: Upload build artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.compiler }}
        path: build/ 